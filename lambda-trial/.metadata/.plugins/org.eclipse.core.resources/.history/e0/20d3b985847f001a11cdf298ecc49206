package com.ind.Exercises;

import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import com.ind.Exercises.model.Person;

public class PrblmStmt1J7Soln {

	public static void main(String[] args) {

		List<Person> people = Arrays.asList(
				new Person("Charles", "Dickens", 60), 
				new Person("Levis", "Corroll", 30),
				new Person("Thomas", "Corlyle", 64), 
				new Person("Charlotte", "Brante", 45),
				new Person("Mathew", "Arnold", 39));

		// step-1:sort list by last name		
		Collections.sort(people, new Comparator<Person>() {
			@Override
			public int compare(Person o1, Person o2) {
				return o2.getLastName().compareTo(o1.getLastName());
			}
		});
		
		// step-2: create a method that prints all elements in the list
		System.out.println(" ------ Print all the elements in the list ------");
		printAll(people);
		//printConditionally(people, p -> true);
		
		// step-3: create a method that prints people name with conditions		
		System.out.println(" ------- Print people having last name with C ------");
		printConditionally(people, new Condition() {			
			@Override
			public boolean test(Person p) {				
				return p.getLastName().startsWith("C") ;
			}
		});
		
		System.out.println(" ------- Print people having first name with C ------");
		printConditionally(people, new Condition() {
			@Override
			public boolean test(Person p) {			
				return p.getFirstName().startsWith("C");
			}
			
		});
	}

	private static void printConditionally(List<Person> people, Condition condition) {
		for(Person p: people) {
			if(condition.test(p)) {
				System.out.println(p);
			}
			
		}
		
	}
	
	 private static void printAll(List<Person> people) { for(Person p : people) {
	 System.out.println(p); } }
	 

}

interface Condition{
	boolean test(Person p);
}
